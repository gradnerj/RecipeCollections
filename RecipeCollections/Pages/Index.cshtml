@page
@model IndexModel
@using System.Text.RegularExpressions
@{
    ViewData["Title"] = "Recipe Collection Landing Page";
}


<div class="container-fluid">
    <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
        <ol class="carousel-indicators">
            <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
            <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
            <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
        </ol>
        <div class="carousel-inner">
            <div class="carousel-item active">
                <img class="d-block w-100" src="~/images/site_photos/banner3.jpg" alt="First slide">
            </div>
            <div class="carousel-item">
                <img class="d-block w-100" src="~/images/site_photos/banner2.jpg" alt="Second slide">
            </div>
            <div class="carousel-item">
                <img class="d-block w-100" src="~/images/site_photos/banner3.jpg" alt="Third slide">
            </div>
        </div>
        <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>
    <div class="row">
        <div class="col-md-2 d-md-block bg-light sidebar collapse">
            <div pt-3">
                <ul class="nav flex-column">
                    <li class="sidebar-items">
                        <form asp-page="./Index" method="get">
                            <div class="form-actions">
                                <input type="text" placeholder="Find by Title or Category" name="SearchString" value="@Model.CurrentFilter" />
                                <input type="submit" value="Search" class="btn btn-success" />
                            </div>
                            <div class="h6 sidebar-items"><a class="sidebar-links" asp-page="./Index">Back to full List</a></div>
                        </form>
                    </li>
                    <li></li>
                    <li class="sidebar-items">
                        <h6>Sort By</h6>
                    </li>
                    <li class="sidebar-items">
                        <a class="sidebar-links" asp-page="./Index" asp-route-sortType="@Model.TitleSort" asp-route-currentFilter="@Model.CurrentFilter">
                            @Html.DisplayNameFor(model => model.Recipes[0].Title)
                        </a>
                    </li>
                    <li class="sidebar-items">
                        <a class="sidebar-links" asp-page="./Index" asp-route-sortType="@Model.CategorySort" asp-route-currentFilter="@Model.CurrentFilter">
                            @Html.DisplayNameFor(model => model.Recipes[0].Category)
                        </a>
                    </li>
                    <li class="sidebar-items">
                        <a class="sidebar-links" asp-page="./Index" asp-route-sortType="@Model.PrepTimeSort" asp-route-currentFilter="@Model.CurrentFilter">
                            @Html.DisplayNameFor(model => model.Recipes[0].PrepTime)
                        </a>
                    </li>
                    <li class="sidebar-items">
                        <a class="sidebar-links" asp-page="./Index" asp-route-sortType="@Model.CookTimeSort" asp-route-currentFilter="@Model.CurrentFilter">
                            @Html.DisplayNameFor(model => model.Recipes[0].CookTime)
                        </a>
                    </li>
                    <li class="sidebar-items">
                        <a class="sidebar-links" asp-page="./Index" asp-route-sortType="@Model.FeedsQtySort" asp-route-currentFilter="@Model.CurrentFilter">
                            @Html.DisplayNameFor(model => model.Recipes[0].FeedsQty)
                        </a>
                    </li>
                </ul>
            </div>
        </div>
        <main role="main" class="col-md-12">
            <div class="container-fluid">
                <div class="row">
                    @foreach (var r in Model.Recipes) {
                        <div class="col">
                            <div class="card" style="width: 18rem;">
                                <img class="card-img-top uniform-img" src="@r.PhotoPath" alt="Card image cap">
                                <div class="card-body" style="padding-bottom:0px;">

                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th colspan="2" class="card-title">@Html.DisplayFor(modelItem => r.Title)</th>
                                            </tr>
                                        </thead>
                                        <tr>
                                            <th scope="row">
                                                Catgegory
                                            </th>
                                            <td class="card-text">@Html.DisplayFor(modelItem => r.Category)</td>
                                        </tr>
                                        <tr>
                                            <th scope="row">
                                                Prep. Time
                                            </th>
                                            <td><p class="card-text">@Html.DisplayFor(modelItem => r.PrepTime)</p></td>
                                        </tr>
                                        <tr>
                                            <th scope="row">
                                                Cook. Time
                                            </th>
                                            <td><p class="card-text">@Html.DisplayFor(modelItem => r.CookTime)</p></td>
                                        </tr>
                                        <tr>
                                            <th scope="row">
                                                Feeds Qty.
                                            </th>
                                            <td><p class="card-text">@Html.DisplayFor(modelItem => r.FeedsQty)</p></td>
                                        </tr>
                                        <tr>
                                            <th colspan="2" class="text-center">Instructions</th>
                                        </tr>
                                        <tr>
                                            <td>
                                                @if (r.Instructions.Contains("<ul>")) {
                                                    var itemCount = Regex.Matches(r.Instructions, "<li>").Count;
                                                    var parsedInstructions = r.Instructions.Replace("\n", "").Replace("\r", "");
                                                    parsedInstructions = parsedInstructions.Replace("<ul>", "");
                                                    parsedInstructions = parsedInstructions.Replace("</li></ul>", "");
                                                    parsedInstructions = parsedInstructions.Replace("<li>", "");
                                                    parsedInstructions = parsedInstructions.Replace("</li>", ".");
                                                    var listItems = parsedInstructions.Split('.');
                                                    <ul>
                                                        @foreach (var l in listItems) {
                                                            <li>
                                                                @l
                                                            </li>
                                                        }
                                                    </ul>
                                                } else if (r.Instructions.Contains("<ol>")) {
                                                    var itemCount = Regex.Matches(r.Instructions, "<li>").Count;
                                                    var parsedInstructions = r.Instructions.Replace("\n", "").Replace("\r", "");
                                                    parsedInstructions = parsedInstructions.Replace("<ol>", "");
                                                    parsedInstructions = parsedInstructions.Replace("</li></ol>", "");
                                                    parsedInstructions = parsedInstructions.Replace("<li>", "");
                                                    parsedInstructions = parsedInstructions.Replace("</li>", ".");
                                                    var listItems = parsedInstructions.Split('.');
                                                    <ol>
                                                        @foreach (var l in listItems) {
                                                            <li>
                                                                @l
                                                            </li>
                                                        }
                                                    </ol>
                                                } else {
                                                    var parsedInstructions = r.Instructions.Replace("<p>", "").Replace("</p>", "");
                                                    <p class="card-text">
                                                        @parsedInstructions
                                                    </p>
                                                }
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="row-12 offset-5" style="justify-content:space-evenly; margin-top: 20px;">
                    @{
                        var prevDisabled = !Model.Recipes.HasPreviousPage ? "disabled" : "";
                        var nextDisabled = !Model.Recipes.HasNextPage ? "disabled" : "";
                    }

                    <a asp-page="./Index"
                       asp-route-sortOrder="@Model.CurrentSort"
                       asp-route-pageIndex="@(Model.Recipes.PageIndex - 1)"
                       asp-route-currentFilter="@Model.CurrentFilter"
                       class="btn btn-success @prevDisabled">
                        Previous
                    </a>


                    <a asp-page="./Index"
                       asp-route-sortOrder="@Model.CurrentSort"
                       asp-route-pageIndex="@(Model.Recipes.PageIndex + 1)"
                       asp-route-currentFilter="@Model.CurrentFilter"
                       class="btn btn-success @nextDisabled">
                        Next
                    </a>
                </div>
            </div>
        </main>

    </div>
</div>